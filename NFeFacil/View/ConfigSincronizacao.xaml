<Page x:Class="NFeFacil.View.ConfigSincronizacao"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:NFeFacil.View"
      xmlns:conversores="using:NFeFacil.ViewModel.Converters"
      xmlns:my="using:NFeFacil.View.Controles"
      xmlns:VM="using:NFeFacil.ViewModel"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Estilos/CoresDestaque.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <VM:ConfigSincronizacaoDataContext x:Key="contexto" />
            <conversores:BoolToVisibility x:Key="boolView" />
            <Storyboard x:Name="ocultarGrid">
                <FadeOutThemeAnimation TargetName="main"
                                       Duration="0:0:0.25" />
            </Storyboard>
        </ResourceDictionary>
    </Page.Resources>
    <Grid DataContext="{StaticResource contexto}"
          x:Name="main">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800"></AdaptiveTrigger>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.Setters>
                        <Setter Target="grdInfoImgQR.(Grid.Row)"
                                Value="1" />
                        <Setter Target="imgQR.(Grid.Row)"
                                Value="0" />
                        <Setter Target="grdInfoImgQR.(Grid.Column)"
                                Value="0" />
                        <Setter Target="imgQR.(Grid.Column)"
                                Value="0" />
                        <Setter Target="grdInfoImgQR.(Grid.RowSpan)"
                                Value="1" />
                        <Setter Target="imgQR.(Grid.RowSpan)"
                                Value="1" />
                        <Setter Target="grdInfoImgQR.(Grid.ColumnSpan)"
                                Value="2" />
                        <Setter Target="imgQR.(Grid.ColumnSpan)"
                                Value="2" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="580"></AdaptiveTrigger>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:1"
                                         To="0"
                                         Storyboard.TargetName="grdQRTemporario"
                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:2"
                                                       Storyboard.TargetName="grdQRTemporario"
                                                       Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="Collapsed" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grdPrincipal"
                                                       Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="Visible" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0:0:1"
                                         To="1"
                                         Storyboard.TargetName="grdPrincipal"
                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                    <VisualState.StateTriggers>
                        <local:ExibicaoQR Visivel="False"
                                          Contexto="{StaticResource contexto}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:1"
                                         To="0"
                                         Storyboard.TargetName="grdPrincipal"
                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:2"
                                                       Storyboard.TargetName="grdPrincipal"
                                                       Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="Collapsed" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grdQRTemporario"
                                                       Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="Visible" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0:0:1"
                                         To="1"
                                         Storyboard.TargetName="grdQRTemporario"
                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                    <VisualState.StateTriggers>
                        <local:ExibicaoQR Visivel="True"
                                          Contexto="{StaticResource contexto}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <ScrollViewer x:Name="grdPrincipal"
                      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                      VerticalScrollBarVisibility="Hidden"
                      Margin="4,0">
            <StackPanel>
                <StackPanel.ChildrenTransitions>
                    <TransitionCollection>
                        <EntranceThemeTransition IsStaggeringEnabled="True" />
                    </TransitionCollection>
                </StackPanel.ChildrenTransitions>
                <RichTextBlock>
                    <Paragraph>
                        <Run Text="Aqui você pode configurar tudo relacionado à sincronização entre dispositivos." />
                    </Paragraph>
                    <Paragraph>
                        <Run Text="Este aplicativo pode usar qualquer dispositivo para servir como o servidor." />
                        <Run Text="Os &quot;clientes&quot; poderão enviar e receber informações do servidor, de forma a manter todos os dispositivos sempre sincronizados." />
                    </Paragraph>
                </RichTextBlock>
                <TextBlock>Este dispositivo será um:</TextBlock>
                <StackPanel Orientation="Horizontal"
                            Margin="0,0,0,8">
                    <RadioButton Content="Servidor"
                                 GroupName="TipoApp"
                                 IsChecked="{Binding IsServidor, Mode=OneWay}" />
                    <RadioButton Content="Cliente"
                                 GroupName="TipoApp"
                                 IsChecked="{Binding IsCliente, Mode=TwoWay}" />
                </StackPanel>
                <StackPanel Visibility="{Binding Path=IsServidor, Converter={StaticResource boolView}}">
                    <TextBlock Style="{StaticResource SubtitleTextBlockStyle}">Dados liberados para sincronização</TextBlock>
                    <ToggleSwitch Header="Elementos básicos para criação da nota"
                                  IsOn="{Binding SincronizarDadoBase, Mode=TwoWay}" />
                    <ToggleSwitch Header="Notas fiscais"
                                  IsOn="{Binding SincronizarNotaFiscal, Mode=TwoWay}" />
                    <TextBlock Margin="0,8,0,0"
                               Style="{StaticResource SubtitleTextBlockStyle}">Inicialização do servidor</TextBlock>
                    <TextBlock TextWrapping="Wrap"
                               x:Uid="txtInicializaçãoServidor" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button HorizontalAlignment="Stretch"
                                IsEnabled="{Binding IniciarManualmente}"
                                Command="{Binding IniciarServidorCommand}"
                                Margin="0,0,4,0">Iniciar servidor</Button>
                        <ToggleSwitch  Grid.Column="1"
                                       IsOn="{Binding IniciarAutomaticamente, Mode=TwoWay}"
                                       OnContent="Iniciar junto à aplicação"
                                       OffContent="Iniciar manualmente" />
                    </Grid>
                    <TextBlock Margin="0,8,0,0"
                               Style="{StaticResource SubtitleTextBlockStyle}">Conexão ao servidor</TextBlock>
                    <TextBlock TextWrapping="Wrap"
                               x:Uid="txtConexaoServidor" />
                    <Button HorizontalAlignment="Stretch"
                            IsEnabled="{Binding ServerRodando}"
                            Margin="0,0,0,10"
                            Command="{Binding GerarQRTemporárioCommand}">Gerar código QR temporário</Button>
                </StackPanel>
                <StackPanel Visibility="{Binding Path=IsCliente, Converter={StaticResource boolView}}">
                    <RichTextBlock>
                        <Paragraph>
                            <Run>Já que este dispositivo servirá como cliente, conecte ele ao servidor lendo o código QR gerado pelo servidor apertando o botão abaixo.</Run>
                        </Paragraph>
                    </RichTextBlock>
                    <TextBlock Style="{StaticResource SubtitleTextBlockStyle}"
                               Margin="0,8,0,0">Conectar-se ao servidor</TextBlock>
                    <StackPanel Orientation="Horizontal">
                        <my:ItemPadrao Command="{Binding LerQRTemporárioCommand}"
                                       Titulo="Automaticamente"
                                       Descricao="Ler código QR temporário">
                            <SymbolIcon Symbol="Camera" />
                        </my:ItemPadrao>
                        <my:ItemPadrao Command="{Binding InserirDadosManualmenteCommand}"
                                       Titulo="Manualmente"
                                       Descricao="Digitar os dados do servidor">
                            <SymbolIcon Symbol="Keyboard" />
                        </my:ItemPadrao>
                    </StackPanel>
                    <TextBlock Margin="0,5,0,0"
                               Style="{StaticResource SubtitleTextBlockStyle}">Sincronizar</TextBlock>
                    <Button HorizontalAlignment="Stretch"
                            Command="{Binding SincronizarAgoraCommand}">Sincronizar agora</Button>
                    <ToggleSwitch HorizontalAlignment="Stretch"
                                  Header="Sincronizar automaticamente a cada 15 minutos"
                                  IsOn="{Binding SincronizarAutomaticamente, Mode=TwoWay}" />
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
        <Grid x:Name="grdQRTemporario"
              Opacity="0"
              Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Image x:Name="imgQR"
                   Grid.RowSpan="2"
                   Source="{Binding QRGerado}" />
            <Grid x:Name="grdInfoImgQR"
                  Grid.Column="1"
                  Grid.RowSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.ColumnSpan="2"
                           TextWrapping="Wrap">
                    <Run Text="Leia o código QR ou insira estes dados no dispositivo que será conectado. " />
                    <Run Text="Você pode parar também clicando no botão do meio do anel de carregamento."
                         FontWeight="Bold" /></TextBlock>
                <TextBox Grid.Row="1"
                         IsReadOnly="True"
                         TextWrapping="Wrap"
                         Header="IP"
                         Text="{Binding Informacoes.IP}" />
                <TextBox Grid.Row="1"
                         Grid.Column="1"
                         IsReadOnly="True"
                         TextWrapping="Wrap"
                         Header="Senha temporária"
                         Text="{Binding Informacoes.SenhaTemporaria}" />
                <TextBlock Grid.Row="3"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           Margin="0,4,0,0"
                           Grid.ColumnSpan="2">Tempo restante</TextBlock>
                <my:CarregamentoCircular Grid.Row="4"
                                         Grid.ColumnSpan="2"
                                         Segmento="{StaticResource Normal}"
                                         ActualValue="{Binding ValorAtual}"
                                         MaxValue="{Binding ValorMaximo, Mode=OneTime}"
                                         Thickness="16" />
                <Button Grid.Row="4"
                        Grid.ColumnSpan="2"
                        VerticalAlignment="Center"
                        Command="{Binding FecharBrechaSeguranca}"
                        HorizontalAlignment="Center"
                        Background="{x:Null}">
                    <StackPanel>
                        <SymbolIcon Symbol="Stop"
                                    Width="20"
                                    Height="20"
                                    Margin="20,24"
                                    RenderTransformOrigin="0.5,0.5">
                            <SymbolIcon.RenderTransform>
                                <CompositeTransform ScaleX="4"
                                                    ScaleY="4" />
                            </SymbolIcon.RenderTransform>
                        </SymbolIcon>
                    </StackPanel>
                </Button>
                <ListView HorizontalAlignment="Center"
                          HorizontalContentAlignment="Center"
                          Grid.Row="5"
                          Grid.ColumnSpan="2">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="MinHeight"
                                    Value="32" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
        </Grid>
    </Grid>
</Page>
