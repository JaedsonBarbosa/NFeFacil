<Page x:Class="NFeFacil.View.Configuracoes"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:my="using:NFeFacil.View.Controles"
      xmlns:local="using:NFeFacil.View"
      xmlns:VM="using:NFeFacil.ViewModel"
      xmlns:Conversores="using:NFeFacil.ViewModel.Converters"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///View/Estilos/CoresDestaque.xaml" />
                <ResourceDictionary Source="ms-appx:///View/Estilos/GridResponsiva.xaml" />
                <ResourceDictionary Source="ms-appx:///View/Estilos/PivotPrincipal.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Storyboard x:Name="ocultarGrid">
                <DoubleAnimation Duration="0:0:0.25"
                                 To="0"
                                 Storyboard.TargetProperty="(UIElement.Opacity)"
                                 Storyboard.TargetName="grdPrincipal" />
            </Storyboard>
            <Conversores:BoolToVisibility x:Key="boolView"></Conversores:BoolToVisibility>
            <Conversores:BoolToIcon x:Key="boolIcon"></Conversores:BoolToIcon>
            <Conversores:BoolToInt x:Key="boolInt"></Conversores:BoolToInt>
            <VM:ConfiguracoesDataContext x:Key="contexto" />
        </ResourceDictionary>
    </Page.Resources>
    <Grid x:Name="grdPrincipal"
          DataContext="{StaticResource contexto}"
          Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EdgeUIThemeTransition Edge="Bottom" />
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800"></AdaptiveTrigger>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.Setters>
                        <Setter Target="grdInfoImgQR.(Grid.Row)"
                                Value="1" />
                        <Setter Target="imgQR.(Grid.Row)"
                                Value="0" />
                        <Setter Target="grdInfoImgQR.(Grid.Column)"
                                Value="0" />
                        <Setter Target="imgQR.(Grid.Column)"
                                Value="0" />
                        <Setter Target="grdInfoImgQR.(Grid.RowSpan)"
                                Value="1" />
                        <Setter Target="imgQR.(Grid.RowSpan)"
                                Value="1" />
                        <Setter Target="grdInfoImgQR.(Grid.ColumnSpan)"
                                Value="2" />
                        <Setter Target="imgQR.(Grid.ColumnSpan)"
                                Value="2" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="580"></AdaptiveTrigger>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:1"
                                         To="0"
                                         Storyboard.TargetName="grdQRTemporario"
                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:2"
                                                       Storyboard.TargetName="grdQRTemporario"
                                                       Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="Collapsed" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pvtPrincipal"
                                                       Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="Visible" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0:0:1"
                                         To="1"
                                         Storyboard.TargetName="pvtPrincipal"
                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                    <VisualState.StateTriggers>
                        <local:ExibicaoQR Visivel="False"
                                          Contexto="{StaticResource contexto}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:1"
                                         To="0"
                                         Storyboard.TargetName="pvtPrincipal"
                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:2"
                                                       Storyboard.TargetName="pvtPrincipal"
                                                       Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="Collapsed" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grdQRTemporario"
                                                       Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="Visible" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0:0:1"
                                         To="1"
                                         Storyboard.TargetName="grdQRTemporario"
                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                    <VisualState.StateTriggers>
                        <local:ExibicaoQR Visivel="True"
                                          Contexto="{StaticResource contexto}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Pivot x:Name="pvtPrincipal">
            <PivotItem>
                <PivotItem.Header>
                    <my:Guia Symbol="Sync"
                             Label="Sincronização" />
                </PivotItem.Header>
                <ScrollViewer VerticalScrollBarVisibility="Hidden">
                    <StackPanel>
                        <RichTextBlock>
                            <Paragraph>
                                <Run Text="Aqui você pode configurar tudo relacionado à sincronização entre dispositivos." />
                            </Paragraph>
                            <Paragraph>
                                <Run Text="Este aplicativo pode usar qualquer dispositivo para servir como o servidor." />
                                <Run Text="Os &quot;clientes&quot; poderão enviar e receber informações do servidor, de forma a manter todos os dispositivos sempre sincronizados." />
                            </Paragraph>
                            <Paragraph>
                                <Run Text="Então, este dispositivo servirá como servidor ou como cliente?" />
                            </Paragraph>
                        </RichTextBlock>
                        <StackPanel Orientation="Horizontal">
                            <RadioButton Content="Servidor"
                                         GroupName="TipoApp"
                                         IsChecked="{Binding IsServidor, Mode=OneWay}" />
                            <RadioButton Content="Cliente"
                                         GroupName="TipoApp"
                                         IsChecked="{Binding IsCliente, Mode=TwoWay}" />
                        </StackPanel>
                        <StackPanel Visibility="{Binding Path=IsServidor, Mode=OneWay, Converter={StaticResource boolView}}">
                            <TextBlock TextWrapping="Wrap">Já que este dispositivo será um servidor, você pode definir o que poderá ser disponibilizado para os dispositivos que se conectarão a este servidor, ou seja, o que será sincronizado entre os dispositivos.</TextBlock>
                            <ToggleSwitch Header="Dados básicos para criação da nota"
                                          IsOn="{Binding SincronizarDadoBase, Mode=TwoWay}"
                                          OnContent="Sincronizar"
                                          OffContent="Informação privada" />
                            <StackPanel Visibility="Collapsed"
                                        Orientation="Horizontal">
                                <AppBarToggleButton x:Name="tglEmitentes"
                                                    Label="Emitentes">
                                    <AppBarToggleButton.Icon>
                                        <SymbolIcon Symbol="{Binding ElementName=tglEmitentes, Path=IsChecked, Converter={StaticResource boolIcon}}" />
                                    </AppBarToggleButton.Icon>
                                </AppBarToggleButton>
                                <AppBarToggleButton x:Name="tglClientes"
                                                    Label="Clientes">
                                    <AppBarToggleButton.Icon>
                                        <SymbolIcon Symbol="{Binding ElementName=tglClientes, Path=IsChecked, Converter={StaticResource boolIcon}}" />
                                    </AppBarToggleButton.Icon>
                                </AppBarToggleButton>
                                <AppBarToggleButton x:Name="tglMotoristas"
                                                    Label="Motoristas">
                                    <AppBarToggleButton.Icon>
                                        <SymbolIcon Symbol="{Binding ElementName=tglMotoristas, Path=IsChecked, Converter={StaticResource boolIcon}}" />
                                    </AppBarToggleButton.Icon>
                                </AppBarToggleButton>
                                <AppBarToggleButton x:Name="tglProdutos"
                                                    Label="Produtos">
                                    <AppBarToggleButton.Icon>
                                        <SymbolIcon Symbol="{Binding ElementName=tglProdutos, Path=IsChecked, Converter={StaticResource boolIcon}}" />
                                    </AppBarToggleButton.Icon>
                                </AppBarToggleButton>
                            </StackPanel>
                            <ToggleSwitch Header="Notas fiscais"
                                          IsOn="{Binding SincronizarNotaFiscal, Mode=TwoWay}"
                                          OnContent="Sincronizar"
                                          OffContent="Informação privada" />
                            <TextBlock Margin="0,5,0,0"
                                       Style="{StaticResource SubtitleTextBlockStyle}">Inicialização do servidor</TextBlock>
                            <TextBlock TextWrapping="Wrap"
                                       x:Uid="txtInicializaçãoServidor" />
                            <Button HorizontalAlignment="Stretch"
                                    IsEnabled="{Binding IniciarManualmente, Mode=OneWay}"
                                    Command="{Binding IniciarServidorCommand}">Iniciar servidor</Button>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ToggleSwitch Header="Inicialização automática"
                                              IsOn="{Binding IniciarAutomaticamente, Mode=TwoWay}"
                                              OnContent="Sim"
                                              OffContent="Não" />
                                <TextBlock x:Uid="txtInicializaçãoAutomatica"
                                           Grid.Column="1"
                                           Margin="5,0,0,0"
                                           TextWrapping="Wrap" />
                            </Grid>
                            <TextBlock Margin="0,5,0,0"
                                       Style="{StaticResource SubtitleTextBlockStyle}">Conexão ao servidor</TextBlock>
                            <TextBlock TextWrapping="Wrap"
                                       x:Uid="txtConexaoServidor" />
                            <Button HorizontalAlignment="Stretch"
                                    IsEnabled="{Binding ServerRodando, Mode=OneWay}"
                                    Margin="0,0,0,10"
                                    Command="{Binding GerarQRTemporárioCommand}">Gerar código QR temporário</Button>
                        </StackPanel>
                        <StackPanel Visibility="{Binding Path=IsCliente, Mode=OneWay, Converter={StaticResource boolView}}">
                            <RichTextBlock>
                                <Paragraph>
                                    <Run>Já que este dispositivo servirá como cliente, conecte ele ao servidor lendo o código QR gerado pelo servidor apertando o botão abaixo.</Run>
                                </Paragraph>
                            </RichTextBlock>
                            <TextBlock Style="{StaticResource SubtitleTextBlockStyle}"
                                       Margin="0,8,0,0">Conectar-se ao servidor</TextBlock>
                            <StackPanel Orientation="Horizontal">
                                <my:ItemPadrao Command="{Binding LerQRTemporárioCommand}"
                                               Titulo="Automaticamente"
                                               Descricao="Ler código QR temporário">
                                    <SymbolIcon Symbol="Camera" />
                                </my:ItemPadrao>
                                <my:ItemPadrao Command="{Binding InserirDadosManualmenteCommand}"
                                               Titulo="Manualmente"
                                               Descricao="Digitar os dados do servidor">
                                    <SymbolIcon Symbol="Keyboard" />
                                </my:ItemPadrao>
                            </StackPanel>
                            <TextBlock Style="{StaticResource SubtitleTextBlockStyle}">Status</TextBlock>
                            <TextBlock Margin="0,0,0,10"
                                       Text="{Binding StatusCliente, Mode=OneWay}" />
                            <TextBlock Margin="0,5,0,0"
                                       Style="{StaticResource SubtitleTextBlockStyle}">Sincronizar</TextBlock>
                            <Button HorizontalAlignment="Stretch"
                                    Command="{Binding SincronizarAgoraCommand}">Sincronizar agora</Button>
                            <ToggleSwitch HorizontalAlignment="Stretch"
                                          Header="Sincronizar automaticamente a cada 15 minutos"
                                          IsOn="{Binding SincronizarAutomaticamente, Mode=TwoWay}" />
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </PivotItem>
            <PivotItem>
                <PivotItem.Header>
                    <my:Guia Symbol="Permissions"
                             Label="Certificado" />
                </PivotItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <RichTextBlock Style="{StaticResource BodyRichTextBlockStyle}">
                        <Paragraph>
                            <Run Text="Escolha o certificado que será usado para realizar a conexão com os servidores da SEFAZ e para a assinatura das notas fiscais." />
                        </Paragraph>
                        <Paragraph>
                            <Run Text="Você pode usar os certificados instalados na pasta pessoal de certificados do usuário. Você só precisa escolher um dos certificados exibidos logo abaixo." />
                        </Paragraph>
                    </RichTextBlock>
                    <ListView Grid.Row="1"
                              ItemsSource="{Binding Certificados, Mode=OneWay}"
                              SelectedItem="{Binding CertificadoEscolhido, Mode=TwoWay}" />
                </Grid>
            </PivotItem>
            <PivotItem>
                <PivotItem.Header>
                    <my:Guia Symbol="Import"
                             Label="Importar" />
                </PivotItem.Header>
                <ScrollViewer VerticalScrollBarVisibility="Hidden">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <RichTextBlock Margin="0">
                            <Paragraph>
                                <Run Text="Você também pode importar informações, como emitentes ou clientes, cadastrados em outros aplicativos ou notas fiscais emitidas por qualquer programa." />
                            </Paragraph>
                        </RichTextBlock>
                        <ItemsControl Grid.Row="1"
                                      Style="{StaticResource ItensResponsivos}">
                            <StackPanel Margin="2">
                                <TextBlock Style="{StaticResource SubtitleTextBlockStyle}"
                                           Margin="0,10,0,0">Importar dado base</TextBlock>
                                <RichTextBlock>
                                    <Paragraph>
                                        <Run Text="Escolha o tipo de dado que você quer importar e clique em Importar. Então, uma caixa de diálogo será aberta e você poderá escolher em quais arquivos XML estão as informações desejadas." />
                                    </Paragraph>
                                    <Paragraph>
                                        <Run Text="Por favor, para evitar erros, após clicar em Abrir na caixa que se abrirá espere até a mensagem de sucesso ser exibida." />
                                    </Paragraph>
                                </RichTextBlock>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ComboBox ItemsSource="{Binding TiposBásicos, Mode=OneTime}"
                                              SelectedItem="{Binding TipoBásicoSelecionado, Mode=TwoWay}"
                                              HorizontalAlignment="Stretch" />
                                    <Button Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            Command="{Binding ImportarDadoBaseCommand}">Importar</Button>
                                </Grid>
                            </StackPanel>
                            <StackPanel Margin="2">
                                <TextBlock Margin="0,10,0,0"
                                           Style="{StaticResource SubtitleTextBlockStyle}">Importar nota fiscal</TextBlock>
                                <TextBlock TextWrapping="Wrap">Para importar notas fiscais você só precisa clicar no botão abaixo e, na janela que se abrirá, escolha as notas fiscais que deverão ser importadas.</TextBlock>
                                <Button HorizontalAlignment="Stretch"
                                        Command="{Binding ImportarNotaFiscalCommand}">Importar</Button>
                            </StackPanel>
                        </ItemsControl>
                    </Grid>
                </ScrollViewer>
            </PivotItem>
        </Pivot>
        <Grid x:Name="grdQRTemporario"
              Opacity="0"
              Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Image x:Name="imgQR"
                   Grid.RowSpan="2"
                   Source="{Binding QRGerado, Mode=OneWay}" />
            <Grid x:Name="grdInfoImgQR"
                  Grid.Column="1"
                  Grid.RowSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.ColumnSpan="2"
                           TextWrapping="Wrap">
                    <Run Text="Leia o código QR ou insira estes dados no dispositivo que será conectado. " />
                    <Run Text="Você pode parar também clicando no botão do meio do anel de carregamento."
                         FontWeight="Bold" />
                </TextBlock>
                <TextBox Grid.Row="1"
                         IsReadOnly="True"
                         TextWrapping="Wrap"
                         Header="IP"
                         Text="{Binding Informacoes.IP}" />
                <TextBox Grid.Row="1"
                         Grid.Column="1"
                         IsReadOnly="True"
                         TextWrapping="Wrap"
                         Header="Senha temporária"
                         Text="{Binding Informacoes.SenhaTemporaria}" />
                <TextBlock Grid.Row="3"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           Margin="0,4,0,0"
                           Grid.ColumnSpan="2">Tempo restante</TextBlock>
                <my:CarregamentoCircular Grid.Row="4"
                                         Grid.ColumnSpan="2"
                                         Segmento="{StaticResource Normal}"
                                         ActualValue="{Binding ValorAtual}"
                                         MaxValue="{Binding ValorMaximo, Mode=OneTime}"
                                         Thickness="16" />
                <Button Grid.Row="4"
                        Grid.ColumnSpan="2"
                        VerticalAlignment="Center"
                        Command="{Binding FecharBrechaSeguranca}"
                        HorizontalAlignment="Center"
                        Background="{x:Null}">
                    <StackPanel>
                        <SymbolIcon Symbol="Stop"
                                    Width="20"
                                    Height="20"
                                    Margin="20,24"
                                    RenderTransformOrigin="0.5,0.5">
                            <SymbolIcon.RenderTransform>
                                <CompositeTransform ScaleX="4"
                                                    ScaleY="4" />
                            </SymbolIcon.RenderTransform>
                        </SymbolIcon>
                    </StackPanel>
                </Button>
                <ListView HorizontalAlignment="Center"
                          HorizontalContentAlignment="Center"
                          Grid.Row="5"
                          Grid.ColumnSpan="2">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="MinHeight"
                                    Value="32" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
        </Grid>
    </Grid>
</Page>
