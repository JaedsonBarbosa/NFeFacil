//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 15.0.27703.1
// 
namespace Fiscal.AutorizarBA {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4", ConfigurationName="AutorizarBA.NFeAutorizacao4Soap")]
    public interface NFeAutorizacao4Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4/nfeAutorizacaoLote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Fiscal.AutorizarBA.nfeAutorizacaoLoteResponse> nfeAutorizacaoLoteAsync(Fiscal.AutorizarBA.nfeAutorizacaoLoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4/nfeAutorizacaoLoteZip", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Fiscal.AutorizarBA.nfeAutorizacaoLoteZipResponse> nfeAutorizacaoLoteZipAsync(Fiscal.AutorizarBA.nfeAutorizacaoLoteZipRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class nfeAutorizacaoLoteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4", Order=0)]
        public System.Xml.Linq.XElement nfeDadosMsg;
        
        public nfeAutorizacaoLoteRequest() {
        }
        
        public nfeAutorizacaoLoteRequest(System.Xml.Linq.XElement nfeDadosMsg) {
            this.nfeDadosMsg = nfeDadosMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class nfeAutorizacaoLoteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4", Order=0)]
        public System.Xml.Linq.XElement nfeResultMsg;
        
        public nfeAutorizacaoLoteResponse() {
        }
        
        public nfeAutorizacaoLoteResponse(System.Xml.Linq.XElement nfeResultMsg) {
            this.nfeResultMsg = nfeResultMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class nfeAutorizacaoLoteZipRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4", Order=0)]
        public string nfeDadosMsgZip;
        
        public nfeAutorizacaoLoteZipRequest() {
        }
        
        public nfeAutorizacaoLoteZipRequest(string nfeDadosMsgZip) {
            this.nfeDadosMsgZip = nfeDadosMsgZip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class nfeAutorizacaoLoteZipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4", Order=0)]
        public System.Xml.Linq.XElement nfeResultMsg;
        
        public nfeAutorizacaoLoteZipResponse() {
        }
        
        public nfeAutorizacaoLoteZipResponse(System.Xml.Linq.XElement nfeResultMsg) {
            this.nfeResultMsg = nfeResultMsg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface NFeAutorizacao4SoapChannel : Fiscal.AutorizarBA.NFeAutorizacao4Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NFeAutorizacao4SoapClient : System.ServiceModel.ClientBase<Fiscal.AutorizarBA.NFeAutorizacao4Soap>, Fiscal.AutorizarBA.NFeAutorizacao4Soap {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public NFeAutorizacao4SoapClient() : 
                base(NFeAutorizacao4SoapClient.GetDefaultBinding(), NFeAutorizacao4SoapClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.NFeAutorizacao4Soap.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NFeAutorizacao4SoapClient(EndpointConfiguration endpointConfiguration) : 
                base(NFeAutorizacao4SoapClient.GetBindingForEndpoint(endpointConfiguration), NFeAutorizacao4SoapClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NFeAutorizacao4SoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NFeAutorizacao4SoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NFeAutorizacao4SoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NFeAutorizacao4SoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NFeAutorizacao4SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fiscal.AutorizarBA.nfeAutorizacaoLoteResponse> Fiscal.AutorizarBA.NFeAutorizacao4Soap.nfeAutorizacaoLoteAsync(Fiscal.AutorizarBA.nfeAutorizacaoLoteRequest request) {
            return base.Channel.nfeAutorizacaoLoteAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fiscal.AutorizarBA.nfeAutorizacaoLoteResponse> nfeAutorizacaoLoteAsync(System.Xml.Linq.XElement nfeDadosMsg) {
            Fiscal.AutorizarBA.nfeAutorizacaoLoteRequest inValue = new Fiscal.AutorizarBA.nfeAutorizacaoLoteRequest();
            inValue.nfeDadosMsg = nfeDadosMsg;
            return ((Fiscal.AutorizarBA.NFeAutorizacao4Soap)(this)).nfeAutorizacaoLoteAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fiscal.AutorizarBA.nfeAutorizacaoLoteZipResponse> Fiscal.AutorizarBA.NFeAutorizacao4Soap.nfeAutorizacaoLoteZipAsync(Fiscal.AutorizarBA.nfeAutorizacaoLoteZipRequest request) {
            return base.Channel.nfeAutorizacaoLoteZipAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fiscal.AutorizarBA.nfeAutorizacaoLoteZipResponse> nfeAutorizacaoLoteZipAsync(string nfeDadosMsgZip) {
            Fiscal.AutorizarBA.nfeAutorizacaoLoteZipRequest inValue = new Fiscal.AutorizarBA.nfeAutorizacaoLoteZipRequest();
            inValue.nfeDadosMsgZip = nfeDadosMsgZip;
            return ((Fiscal.AutorizarBA.NFeAutorizacao4Soap)(this)).nfeAutorizacaoLoteZipAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.NFeAutorizacao4Soap)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.NFeAutorizacao4Soap)) {
                return new System.ServiceModel.EndpointAddress("https://nfe.sefaz.ba.gov.br/webservices/NFeAutorizacao4/NFeAutorizacao4.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return NFeAutorizacao4SoapClient.GetBindingForEndpoint(EndpointConfiguration.NFeAutorizacao4Soap);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return NFeAutorizacao4SoapClient.GetEndpointAddress(EndpointConfiguration.NFeAutorizacao4Soap);
        }
        
        public enum EndpointConfiguration {
            
            NFeAutorizacao4Soap,
        }
    }
}
